/*
 * Copyright 2020 Lighthouse Software, Inc.   http://www.LighthouseSoftware.com
 *
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'org.springframework.boot' version '2.3.1.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id 'war'
    id 'groovy'
}

// TODO 2020 Update
//group = 'com.lighthousesoftware'
//version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
    set('springCloudVersion', "Hoxton.SR6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-rest'
    implementation 'org.springframework.boot:spring-boot-starter-freemarker'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.security:spring-security-jwt:1.0.7.RELEASE'
    implementation 'org.springframework.security.oauth:spring-security-oauth2:2.0.12.RELEASE'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.codehaus.groovy:groovy'
    implementation 'org.codehaus.groovy:groovy-all:3.0.4'
    implementation 'org.liquibase:liquibase-core'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-jdbc'
    implementation 'org.springframework.cloud:spring-cloud-starter-aws-messaging'
    implementation 'org.springframework.session:spring-session-core'

    implementation 'org.hibernate:hibernate-envers:5.0.11.Final'

    // Login Web Form
    implementation 'org.apache.tomcat.embed:tomcat-embed-jasper:9.0.36'
    implementation 'javax.servlet:jstl:1.2'

    // Webjars (for css/js libs)
    implementation 'org.webjars:webjars-locator:0.30'
    implementation 'org.webjars:bootstrap:3.3.7'

    // Amazon Web Service (AWS)
    implementation 'org.springframework.cloud:spring-cloud-aws-autoconfigure:1.1.3.RELEASE'
    implementation 'org.springframework.cloud:spring-cloud-aws-messaging:1.1.3.RELEASE'

    // Other
    implementation 'org.apache.commons:commons-lang3:3.5'
    implementation 'commons-codec:commons-codec:1.10'
    implementation 'org.owasp.esapi:esapi:2.1.0.1'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.4.0'
    implementation 'org.passay:passay:1.2.0'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'mysql:mysql-connector-java'
    providedRuntime 'org.springframework.boot:spring-boot-starter-tomcat'

    testImplementation 'org.spockframework:spock-core:1.3-groovy-2.5'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'com.icegreen:greenmail:1.5.2'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}
