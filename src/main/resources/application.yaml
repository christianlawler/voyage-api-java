#######################################################################################################################
# Application
#######################################################################################################################
app:
  name: Voyage
  contact-support:
    email: support@LighthouseSoftware.com
    phone: 651-888-6021
    website: http://LighthouseSoftware.com/support
  default-country: US

#######################################################################################################################
# Logging
#######################################################################################################################
logging:
  file: voyage-api.log

#######################################################################################################################
# Liquibase Database Migration
#######################################################################################################################
liquibase.contexts: '!test'

#######################################################################################################################
# Spring Configuration
#######################################################################################################################
spring:

  application:
    name: Voyage API

  autoconfigure:
    exclude:
      - org.springframework.cloud.aws.autoconfigure.mail.MailSenderAutoConfiguration

  mvc:
    view:
      prefix: /WEB-INF/jsp/
      suffix: .jsp

  jpa:
    hibernate:
      ddl-auto: none

#  datasource:
#    url: jdbc:h2:mem:voyage
#    username: sa
#    password:
#    driver-class-name: org.h2.Driver

  datasource:
    url: jdbc:mysql://localhost:3306/voyage?useSSL=false
    username: voyage
    password: voyage
    driver-class-name: com.mysql.jdbc.Driver

  mail:
      host: localhost
      port: 3025
      overrideAddress: testmsg@LighthouseSoftware.com

  freemarker:
    template-loader-path: classpath:/email/
    charset: UTF-8
    suffix: .ftl

#######################################################################################################################
# Spring Boot Web / Embedded Tomcat
#######################################################################################################################
server:
  port: 8080
  contextPath: /

#######################################################################################################################
# Security
#######################################################################################################################
security:

  ignored: /resources/**, /webjars/**, /docs, /docs/**
  permitAll: /login, /api/status, /api/**/profiles/register, /swagger-resources/**, /swagger-ui.html, /api/api-docs**

  user-roles:
    default-authority: role.standard_user

  # FOR PRODUCTION: The following MUST be overridden to ensure secrecy of the passwords for the keystore and private
  # See where you can override at https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
  key-store:
    filename: keystore.jks
    password: changeme

  crypto:
    private-key-name: asymmetric
    private-key-password: changeme

  # FOR PRODUCTION: The following MUST be overridden to ensure secrecy of the passwords for the keystore and private
  # See where you can override at https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
  jwt:
    private-key-name: jwt
    private-key-password: changeme

  # FOR PRODUCTION: The following MUST be overridden to ensure secrecy of the passwords for the keystore and private
  # See where you can override at https://docs.spring.io/spring-boot/docs/current/reference/html/boot-features-external-config.html
  oauth2:
    resource:
      id: voyage
      jwt:
        key-value: |
          -----BEGIN PUBLIC KEY-----
          MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAyfgFBATB9oJjCUOVtwsr
          s8H6b8jiwl1gAuOVEHCgQbxuZPJ+YvcJad2xsEQLKbZBatbWF8gQIE0YNPW27niN
          CrH9QKYyFih5Ko2B8M5xbDr1L/AiQUsVwiqBmyj0krswacF9zRHwKHurFoxihhP0
          L6/NYrny8f5No8DNCC/abDYGFksqCE6gzLVB8moFGGcOk71l4CHJmlVrGS/Ec5Jj
          ktQuBza5RwiSb62PYiHGy5mLl8owdH0m0PCaXZBO2QzPbecFp2+W/5aXfIRchcjH
          Itcr8HKAqDO13XDo+xtqtVkFEn6hXXj5YESMkwukbWopDWOpfcGoQZStMhAEN7Xt
          zQIDAQAB
          -----END PUBLIC KEY-----

  http-audit-log:
    exclude-resources: /resources/**, /webjars/**, /docs/**, /swagger-resources/**, /swagger-ui.html, /api/api-docs**
    form-username-fields: username
    mask-fields: password, client-secret, authorization
    store-request-body: true
    store-response-body: true

  user-verification:
    exclude-resources: /oauth/**, /resources/**, /webjars/**, /docs/**, /login, /api/**/verify, /api/**/verify/send, /WEB-INF/jsp/**.jsp, /api/**/profiles/register, /swagger-resources/**, /swagger-ui.html, /api/api-docs**
    verify-code-expire-minutes: 30

  cors:
    enabled: true
    access-control-allow-origins: http://localhost:3000
    access-control-allow-headers: Accept, Authorization, Content-Type, Cookie, Origin, User-Agent
    access-control-allow-methods: GET, PUT, POST, PATCH, DELETE, OPTIONS

  brute-force-attack:
    sleep-after-failure:
      enabled: true
      http-status-failure-list: 400, 401, 403, 404
      min-sleep-seconds: 3
      max-sleep-seconds: 8

    client-lock-basic-auth-filter:
      enabled: true
      resources: /oauth/**
      max-login-attempts: 5

    user-lock-event-listener:
      enabled: true
      max-login-attempts: 5

#######################################################################################################################
# AWS Configuration to send Emails and SMS
#######################################################################################################################
cloud:
  aws:
    enabled: false
    stack:
      auto: false
    credentials:
      accessKey: ENTER YOUR CODE
      secretKey: ENTER YOUR CODE
    region:
      auto: true
      static: us-east-1
#######################################################################################################################
# SpringFox Swagger 2 api-docs
#######################################################################################################################
springfox:
  documentation:
    swagger:
      v2:
        path: /api/api-docs
#######################################################################################################################
# API Long Notes for Swagger
#######################################################################################################################
controller:
  verify:
    workflow:      <h3>VERIFY WORKFLOW</h3>
                              <p>The user verification process is a two-step workflow that is required when a user has been flagged as needing
                               to assert that they are truly in control of their profile. A user might be flagged for verification for any
                               reason at any time. The consumer of this API must be prepared to handle a user verification error response
                               (401 HTTP Status with errorCode 401_verify_user) for any API call made at any time.<p>
                              <br>
                               <p>The verification process requires that the user authenticates with the API using their username and password,
                               and then enters a code that they receive through a pre-approved SMS text message platform (ie mobile phone).
                               Once the user receives the verification code on their mobile device, the app they are interacting with should provide
                               the means to enter the code and pass the code to the POST /verify web service. The /verify service will confirm
                               that the code provided matches the one on file for their device. Once the valid code has been confirmed,
                               then the user can resume making their calls to the API. Until the user verification is completed, the user will
                               not be able to make any API calls other than the 'Verify' API web services.</p>


                              <ol>
                               <li> Consumer invokes an API (ie /profile)
                                  API replies with a 401 HTTP Status
                                  Response body includes an error code of 401_verify_user
                               <li>Consumer invokes GET /verify/send
                                  API sends verification codes to the mobile phones associated with the user's profile
                                  Response includes a success status code
                               <li>Consumer invokes POST /verify
                                  API receives the verification code and validates the user
                                  Response includes a success or failure status code with error message
                               <li>Consumer invokes an API (ie /profile)
                                  Resumes accessing the API</ol>